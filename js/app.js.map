{"version":3,"sources":["lightbox.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["/**\n * Created by ben on 01/01/2017.\n */\n\nconsole.log(\"Lightbox working\");\n\nvar thumbnails = document.getElementsByClassName(\"image\");\n\nvar Thumbnail = function (element) {\n    this.element = element;\n    this.src = this.getImageSrc();\n    this.dataID = this.getDataId();\n    this.imageData = this.getImageData();\n    this.assignClickFunctions();\n};\n\nThumbnail.prototype.getImageSrc = function () {\n    return this.element.getElementsByTagName('img')[0].src;\n};\n\nThumbnail.prototype.getDataId = function () {\n    return this.element.getElementsByTagName('a')[0].dataset.revealId;\n};\n\nThumbnail.prototype.getImageData = function () {\n    // Setup object to contain image data\n    var imageData = {\n        container: \"\",\n        src: \"\",\n        srcset: \"\",\n        alt: \"\"\n    };\n    if (document.getElementById(this.dataID)) {\n        var imageContainer = document.getElementById(this.dataID);\n        imageData.container = imageContainer;\n    } else {\n        console.log(\"Error: No element with an id of \" + this.dataID + \" found\");\n        return null;\n    }\n    if (imageContainer.getElementsByClassName(\"photodata\").length > 0) {\n        var imageElements = imageContainer.getElementsByClassName(\"photodata\");\n    } else {\n        console.log(\"Error: Element \" + this.dataID + \" does not contain a div with a class of photodata\");\n        return null;\n    }\n    if (imageElements[0].hasAttribute(\"data-src\")) {\n        var imageSrc = imageElements[0].dataset.src;\n        imageData.src = imageSrc;\n    } else {\n        console.log(\"Error: photodata class does not contain an imgs dataset\");\n        return null;\n    }\n    if (imageElements[0].hasAttribute(\"data-srcset\")) {\n        var imageSrcset = imageElements[0].dataset.srcset;\n        imageData.srcset = imageSrcset;\n    }\n    if (imageElements[0].hasAttribute(\"data-alt\")) {\n        var imageAlt = imageElements[0].dataset.alt;\n        imageData.alt = imageAlt;\n    }\n    return imageData;\n\n};\n\nThumbnail.prototype.assignClickFunctions = function () {\n    this.addSelectListener(this.element, \"click\", this.showLightbox);\n};\n\nThumbnail.prototype.addSelectListener = function (element, type, func) {\n    element.addEventListener(type, func.bind(this));\n};\n\nThumbnail.prototype.showLightbox = function () {\n    //console.log(this.src);\n    //console.log(this.dataID);\n    console.log(this.imageData);\n    //console.log(this.images.dataset.imgs);\n    var imageContainer = this.imageData.container;\n    console.log(\"Img con: \" + imageContainer);\n    imageContainer.className = \"\";\n};\n\nvar thumbnailsCollection = [];\n\nfor (var i = 0; i < thumbnails.length; i++) {\n    thumbnailsCollection.push(new Thumbnail(thumbnails[i]));\n}\n\n//var lightbox = {\n//    overlay: \"<div id='overlay' class='clearfix'></div>\",\n//    previousBtn: \"<div class='col-prev clearfix'><a href='#'><img src='img/previousBtn.png' class='nav-btn'></a></div>\",\n//    contentDiv: \"<div class='col-main clearfix'></div>\",\n//    nextBtn: \"<div class='col-next clearfix'><a href='#'><img src='img/nextBtn.png' class='nav-btn'></a></div>\",\n//    instructions: \"<p>Use arrow keys or buttons to cycle images</p>\",\n//    mediaContainer: \"<div class='media-container'>\",\n//    caption: \"<p></p>\"\n//};\n\n/*\n *\tAppends an overlay to the screen, this is initial hidden in CSS\n *\t@PARAM none\n *  @RETURN none\n */\nfunction addOverlay(parent, elementToAttach) {\n    var elementContainer = document.createElement(elementToAttach.type);\n    var elementNode = document.createTextNode(elementToAttach.content);\n    elementContainer.id = elementToAttach.id;\n    elementContainer.className = elementToAttach.classes;\n    elementContainer.appendChild(elementNode);\n    console.log(elementContainer);\n    parent.appendChild(elementContainer);\n}\n\nvar Lightbox = function () {\n    this.elements = [];\n};\n\nLightbox.prototype.addElement = function (element) {\n    this.elements.push(element);\n};\n\nlightbox = new Lightbox();\n\nvar LightboxElement = function (type, id, classes, content) {\n    this.type = type;\n    this.id = id;\n    this.classes = classes;\n    this.content = content;\n};\n\nvar overlay = new LightboxElement(\"div\", \"overlay\", \"clearfix\", \"Hello world\");\nlightbox.addElement(overlay);\nvar previousBtn = new LightboxElement(\"div\", \"\", \"col-prev clearfix\", \"<a href='#'><img src='img/previousBtn.png' class='nav-btn'></a>\");\nlightbox.addElement(previousBtn);\n\nvar objRef = document.body;\n\n\naddOverlay(objRef, lightbox.elements[0]);\naddOverlay(document.getElementById(\"overlay\"), lightbox.elements[1]);\n\n\n//$contentDiv.append($instructions);\n//$contentDiv.append($mediaContainer);\n//$contentDiv.append($caption);\n//$overlay.append($previousBtn);\n//$overlay.append($contentDiv);\n//$overlay.append($nextBtn);\n//$(\"body\").prepend($overlay);\n//fullHeight = $( \"body\" ).height();\n//$overlay.height( fullHeight );"]}